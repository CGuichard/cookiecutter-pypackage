name: Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    name: Build and check distribution package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          version: ">=0.8.0"
      - name: Run build
        run: uv build
      - name: Run twine check
        run: uvx twine check dist/*
      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist/

  sbom:
    name: Software Bill of Materials
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v6
        with:
          version: ">=0.8.0"
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"
      - name: Install project dependencies
        run: uv sync --no-dev --all-extras
      - name: Generate SBOM
        run: |
          uvx --from cyclonedx-bom cyclonedx-py environment \
            "$(uv python find)" \
            --output-reproducible \
            --output-format JSON \
            --pyproject pyproject.toml \
            --mc-type library \
            --output-file sbom.cyclonedx.json
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.cyclonedx.json

  # publish-pypi:
  #   name: Publish to PyPI
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: testpypi
  #     url: https://test.pypi.org/p/{{ cookiecutter.project_slug }}
  #     # name: pypi
  #     # url: https://pypi.org/p/{{ cookiecutter.project_slug }}
  #   permissions:
  #     id-token: write # IMPORTANT: mandatory for trusted publishing
  #   steps:
  #     - name: Download distribution artifacts
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: build
  #         path: dist/
  #     - name: Publish distribution package
  #       uses: pypa/gh-action-pypi-publish@release/v1
  #       with:
  #         repository-url: https://test.pypi.org/legacy/

  gh-release:
    name: GitHub Release
    runs-on: ubuntu-latest
    needs: [build, sbom]
    # needs: [build, sbom, publish-pypi]
    permissions:
      contents: write # IMPORTANT: mandatory for making GitHub Releases
      id-token: write # IMPORTANT: mandatory for sigstore
    env:
      GH_TOKEN: ${{ "{{ github.token }}" }}
    steps:
      - uses: actions/checkout@v4
      - name: Download distribution artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist/
      - name: Download SBOM
        uses: actions/download-artifact@v4
        with:
          name: sbom
          path: sbom
      - name: Sign the distribution artifacts with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: ./dist/*
      - name: Create GitHub Release
        run: |
          ./scripts/get_latest_release_notes.py --github-release > notes.md
          gh release create "${{ "{{ github.ref_name }}" }}" \
            dist/* sbom/sbom.cyclonedx.json \
            --target "${{ "{{ github.sha }}" }}" \
            --title "${{ "{{ github.ref_name }}" }}" \
            --notes-file notes.md
